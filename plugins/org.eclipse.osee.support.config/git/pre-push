#!/bin/sh

# A hook to inform OSEE server of what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
	if [ "$local_sha" = $z40 ]
	then
		# Ignore branch delete
		:
	else
		if [ "$remote_sha" = $z40 ]
		then
			# New branch, examine all commits
			range="$local_sha"
		else
			# Update to existing branch, examine new commits
			range="$remote_sha..$local_sha"
		fi

		results="$remote_ref"$'\n'
		readarray -t revs <<< `git rev-list $range`
		for rev in "${revs[@]}"
                do
                        echo $rev
                        results+=`git show --name-status $rev`$'\nGitShowEndsHere\n\n'
                done

                # https://curl.haxx.se/docs/manpage.html#--data-binary
                curl -v -H "Content-Type: text/plain"  -H "osee.account.id: 61106791" http://osee/define/trace/git/5/repo/my-repo --data-binary @- <<-EOF
                $results
                EOF

	fi
done
exit 1
